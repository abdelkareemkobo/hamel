{"title":"Dokku: my favorite personal serverless platform","markdown":{"yaml":{"title":"Dokku: my favorite personal serverless platform","description":"Like Heroku, but you own it.","categories":["infra","severless"],"author":"Hamel Husain","date":"2024-01-09","image":"images/serverless.png","order":1},"headingText":"What is Dokku?","containsRefs":false,"markdown":"\n\n![With Dokku, you can turn a VPS into a powerful serverless platform](images/serverless.png)\n\n\n[Dokku](https://dokku.com/) is an open-source Platform as a Service (PaaS) that runs on a single server of your choice. **It's like [Heroku](https://www.heroku.com/), but you own it.** It is a great way to get the benefits of Heroku without the costs (Heroku can get quite expensive!). I need to deploy many applications for my [LLM consulting work](https://parlance-labs.com/).  Having a cost-effective, easy-to-use serverless platform is essential for me.\n\n**I run a Dokku server on a $7/month VPS on [OVHcloud](https://us.ovhcloud.com/)** for non-gpu workloads.  These applications include things like [nbsanity](https://nbsanity.com/) and [data cleaning tools for LLMs](https://langfree.parlance-labs.com/tutorials/shiny.html#run-the-shiny-app-locally). \n\nSome of the features I love about Dokku:\n\n- Easy to use (like Heroku).\n- Automatic SSL certificate management via [Let's Encrypt](https://letsencrypt.org/).\n- Basic Auth support so I can password-protect sites.\n- Scale up and down with a single command.\n- Flexibility to handle any application (Node, Python, etc), including defining a Docker container.\n- Lots of [official plugins](https://dokku.com/docs/community/plugins/?h=plugins#official-plugins) that do almost anything I want.\n- Easily deploy with git commands.\n\n# Minimal Dokku Examples\n\nMake sure you [install Dokku](https://dokku.com/docs/getting-started/installation/) on your VPS.  As I mentioned, I use [OVH](https://us.ovhcloud.com/).\n\n## Deploying Apps as A Docker Container\n\nAn easy way to deploy applications is with a Docker container.\n\nTo deploy a Docker container, I put a Dockerfile in the root of my git repo like this:\n\n```{.dockerfile filename=\"Dockerfile\"}\nFROM python:3.10\n\nCOPY . /app\nWORKDIR /app\n\n# Install the local package\nRUN pip install .\n\n# This directory contains app.py, a FastApi app\nWORKDIR /app/\n\nENTRYPOINT [\"./entrypoint.sh\"]\n```\n\n:::{.callout-tip}\n\nThe `entrypoint.sh` script allows me to easily run the app locally or in a Docker container.  It looks like this:\n\n```{.bash filename=\"entrypoint.sh\"}\n#!/bin/bash\nexec uvicorn main:app --port \"$PORT\" --host 0.0.0.0\n```\n\n::::\n\nOn the Dokku host, create the app:\n\n```bash\ndokku apps:create myapp\n```\n\n**Locally**, set up access to the Dokku host and name it `dokku` in your `~/.ssh/config` file.  For example, here is mine:\n\n```\nHost dokku\n  HostName <The external IP address of your Dokku host>\n  User ubuntu\n  IdentityFile /Users/hamel/.ssh/dokku\n```\n\nLocally, add the Dokku host as a remote and push to it:\n\n```bash\ngit remote add dokku dokku@dokku:myapp\ngit push dokku main\n```\n\nThat's it - your app should be running on the Dokku host!  Your local logs will print the URL that your application is served on, which by default will be `myapp.yourdomain.com`. You can also scale it up/down with the following command:\n\n```bash\n#scale to two workers\ndokku ps:scale myapp web=2\n```\n\nWe are just scratching the surface.  For more details, see the [Dokku docs](https://dokku.com/docs/).\n\n## Static Sites\n\nGitHub Pages is annoying in that you can't easily deploy private static sites without paying for an expensive Enterprise account.  With Dokku, you can easily deploy a static site from a private GitHub Repo and password-protect it.\n\nWe will assume that you have a static site in a git repo in a folder named `_site`.\n\n**On the Dokku host**, create an app named `mysite` and set the `NGINX_ROOT` environment variable to `_site`:\n\n```bash\ndokku apps:create mystite\ndokku config:set static-site NGINX_ROOT=_site\n```\n\nAlso on the Dokku host, install [basic auth](https://github.com/dokku/dokku-http-auth) and [set permissions](https://github.com/dokku/dokku-http-auth/issues/15#issuecomment-1637058437) so the plugin can work properly.\n\n```bash\n# do setup for the auth plugin that we will use later\nsudo dokku plugin:install https://github.com/dokku/dokku-http-auth.git\nsudo chmod +x /home/dokku\n```\n\nThen execute the following commands from the root of your git repo that contains the static site. :\n\n```bash\ntouch .static # <1> \necho BUILDPACK_URL=https://github.com/dokku/buildpack-nginx > .env # <2>\ngit remote add dokku dokku@dokku:mysite # <3>\n```\n1. tells `dokku` that this is a static site\n2. tells `dokku` to use the nginx buildpack for static sites (it will usually automatically detect this, but if you have a project with code and a static site, you need to tell it to use the nginx buildpack so it doesn't get confused).\n3. add the `dokku` host as a remote.  For this to work, make sure `dokku` is a hostname in your `~/.ssh/config` file as described [in the previous section](#deploying-apps-as-a-docker-container).\n\nFinally, deploy your application:\n\n```bash\ngit push dokku main\n```\n\nYou can now add auth by running the following command on the Dokku host:\n\n```bash \ndokku http-auth:enable mystite <username> <password>\n```\n\n:::{.callout-note}\n\nYou can add multiple usernames/passwords and even filter specific IPs.  See [the docs](https://github.com/dokku/dokku-http-auth).\n\n:::\n\n:::{.callout-tip}\n\n### SSL / HTTPS\n\nIt's often desirable to have HTTPS for your site.  Dokku makes this easy with the [Let's Encrypt Plugin](https://github.com/dokku/dokku-letsencrypt), which will even auto-renew for you.  I don't use this, because I'm letting [Cloudflare handle this with its proxy](https://developers.cloudflare.com/dns/manage-dns-records/reference/proxied-dns-records/). \n\nIf you are using Cloudflare this way, activating this plugin will mess things up (don't worry its easy to disable).  Honestly, I think it's easier to let Cloudflare handle it if you are already doing so.\n\n:::\n\n\n\n# Deploying With GitHub Actions\n\nYou can automatically deploy Dokku apps with GitHub Actions, which is helpful if you don't want to fiddle with pushing to the Dokku host.  Here is an example GitHub Action workflow that does this:\n\n```{.yaml filename=\"deploy-dokku.yml\"}\nname: CI\non:\n  workflow_dispatch:\n  push:\n    branches: [main]\n\nconcurrency: # Cancel previous jobs to avoid deploy locks on dokku\n  group: ${{ github.ref }}\n  cancel-in-progress: true\n\njobs:\n  deploy-dokku:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n        with:\n          fetch-depth: 0\n      \n      - name: Install SSH key\n        run: |\n          echo \"${{ secrets.DOKKU_SSH_PRIVATE_KEY }}\" > private_key.pem\n          chmod 600 private_key.pem\n\n      - name: Add remote and push\n        run: |\n          git remote add dokku dokku@rechat.co:llm-eval\n          GIT_SSH_COMMAND=\"ssh -i private_key.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\" git push dokku main -f\n```\n\n# Miscellaneous Tips\n\nThese are things I often forget, so I'm writing them down here.  For these examples, assume my app is named `llm-eval` and my host is `rechat.co`.\n\n## Run commands remotely\n\nYou don't have to ssh into the Dokku host just to execute commands. You can execute them remotely via the `dokku` user like this:\n\n```bash\n# https://dokku.com/docs/deployment/application-management/\nssh dokku@rechat.co apps:list\n```\n\n## Docker cache\n\nThis is how you can [invalidate the docker cache](https://dokku.com/docs/advanced-usage/repository-management/) for a fresh build:\n\n```bash\nssh dokku@rechat.co repo:purge-cache llm-eval\n```\n\n## Rebuild without pushing\n\nSometimes you want to rebuild without pushing.  There are [many ways to do this](https://dokku.com/docs/processes/process-management/), but one way is like this:\n\n```bash\nssh dokku@rehcat.co ps:rebuild llm-eval\n```\n\n\n# Why Did I Write This?\n\nI had to dig up these details whenever I wanted to deploy a new app, so I had to write it up anyway.  I hope you find it useful, too!\n","srcMarkdownNoYaml":"\n\n![With Dokku, you can turn a VPS into a powerful serverless platform](images/serverless.png)\n\n## What is Dokku?\n\n[Dokku](https://dokku.com/) is an open-source Platform as a Service (PaaS) that runs on a single server of your choice. **It's like [Heroku](https://www.heroku.com/), but you own it.** It is a great way to get the benefits of Heroku without the costs (Heroku can get quite expensive!). I need to deploy many applications for my [LLM consulting work](https://parlance-labs.com/).  Having a cost-effective, easy-to-use serverless platform is essential for me.\n\n**I run a Dokku server on a $7/month VPS on [OVHcloud](https://us.ovhcloud.com/)** for non-gpu workloads.  These applications include things like [nbsanity](https://nbsanity.com/) and [data cleaning tools for LLMs](https://langfree.parlance-labs.com/tutorials/shiny.html#run-the-shiny-app-locally). \n\nSome of the features I love about Dokku:\n\n- Easy to use (like Heroku).\n- Automatic SSL certificate management via [Let's Encrypt](https://letsencrypt.org/).\n- Basic Auth support so I can password-protect sites.\n- Scale up and down with a single command.\n- Flexibility to handle any application (Node, Python, etc), including defining a Docker container.\n- Lots of [official plugins](https://dokku.com/docs/community/plugins/?h=plugins#official-plugins) that do almost anything I want.\n- Easily deploy with git commands.\n\n# Minimal Dokku Examples\n\nMake sure you [install Dokku](https://dokku.com/docs/getting-started/installation/) on your VPS.  As I mentioned, I use [OVH](https://us.ovhcloud.com/).\n\n## Deploying Apps as A Docker Container\n\nAn easy way to deploy applications is with a Docker container.\n\nTo deploy a Docker container, I put a Dockerfile in the root of my git repo like this:\n\n```{.dockerfile filename=\"Dockerfile\"}\nFROM python:3.10\n\nCOPY . /app\nWORKDIR /app\n\n# Install the local package\nRUN pip install .\n\n# This directory contains app.py, a FastApi app\nWORKDIR /app/\n\nENTRYPOINT [\"./entrypoint.sh\"]\n```\n\n:::{.callout-tip}\n\nThe `entrypoint.sh` script allows me to easily run the app locally or in a Docker container.  It looks like this:\n\n```{.bash filename=\"entrypoint.sh\"}\n#!/bin/bash\nexec uvicorn main:app --port \"$PORT\" --host 0.0.0.0\n```\n\n::::\n\nOn the Dokku host, create the app:\n\n```bash\ndokku apps:create myapp\n```\n\n**Locally**, set up access to the Dokku host and name it `dokku` in your `~/.ssh/config` file.  For example, here is mine:\n\n```\nHost dokku\n  HostName <The external IP address of your Dokku host>\n  User ubuntu\n  IdentityFile /Users/hamel/.ssh/dokku\n```\n\nLocally, add the Dokku host as a remote and push to it:\n\n```bash\ngit remote add dokku dokku@dokku:myapp\ngit push dokku main\n```\n\nThat's it - your app should be running on the Dokku host!  Your local logs will print the URL that your application is served on, which by default will be `myapp.yourdomain.com`. You can also scale it up/down with the following command:\n\n```bash\n#scale to two workers\ndokku ps:scale myapp web=2\n```\n\nWe are just scratching the surface.  For more details, see the [Dokku docs](https://dokku.com/docs/).\n\n## Static Sites\n\nGitHub Pages is annoying in that you can't easily deploy private static sites without paying for an expensive Enterprise account.  With Dokku, you can easily deploy a static site from a private GitHub Repo and password-protect it.\n\nWe will assume that you have a static site in a git repo in a folder named `_site`.\n\n**On the Dokku host**, create an app named `mysite` and set the `NGINX_ROOT` environment variable to `_site`:\n\n```bash\ndokku apps:create mystite\ndokku config:set static-site NGINX_ROOT=_site\n```\n\nAlso on the Dokku host, install [basic auth](https://github.com/dokku/dokku-http-auth) and [set permissions](https://github.com/dokku/dokku-http-auth/issues/15#issuecomment-1637058437) so the plugin can work properly.\n\n```bash\n# do setup for the auth plugin that we will use later\nsudo dokku plugin:install https://github.com/dokku/dokku-http-auth.git\nsudo chmod +x /home/dokku\n```\n\nThen execute the following commands from the root of your git repo that contains the static site. :\n\n```bash\ntouch .static # <1> \necho BUILDPACK_URL=https://github.com/dokku/buildpack-nginx > .env # <2>\ngit remote add dokku dokku@dokku:mysite # <3>\n```\n1. tells `dokku` that this is a static site\n2. tells `dokku` to use the nginx buildpack for static sites (it will usually automatically detect this, but if you have a project with code and a static site, you need to tell it to use the nginx buildpack so it doesn't get confused).\n3. add the `dokku` host as a remote.  For this to work, make sure `dokku` is a hostname in your `~/.ssh/config` file as described [in the previous section](#deploying-apps-as-a-docker-container).\n\nFinally, deploy your application:\n\n```bash\ngit push dokku main\n```\n\nYou can now add auth by running the following command on the Dokku host:\n\n```bash \ndokku http-auth:enable mystite <username> <password>\n```\n\n:::{.callout-note}\n\nYou can add multiple usernames/passwords and even filter specific IPs.  See [the docs](https://github.com/dokku/dokku-http-auth).\n\n:::\n\n:::{.callout-tip}\n\n### SSL / HTTPS\n\nIt's often desirable to have HTTPS for your site.  Dokku makes this easy with the [Let's Encrypt Plugin](https://github.com/dokku/dokku-letsencrypt), which will even auto-renew for you.  I don't use this, because I'm letting [Cloudflare handle this with its proxy](https://developers.cloudflare.com/dns/manage-dns-records/reference/proxied-dns-records/). \n\nIf you are using Cloudflare this way, activating this plugin will mess things up (don't worry its easy to disable).  Honestly, I think it's easier to let Cloudflare handle it if you are already doing so.\n\n:::\n\n\n\n# Deploying With GitHub Actions\n\nYou can automatically deploy Dokku apps with GitHub Actions, which is helpful if you don't want to fiddle with pushing to the Dokku host.  Here is an example GitHub Action workflow that does this:\n\n```{.yaml filename=\"deploy-dokku.yml\"}\nname: CI\non:\n  workflow_dispatch:\n  push:\n    branches: [main]\n\nconcurrency: # Cancel previous jobs to avoid deploy locks on dokku\n  group: ${{ github.ref }}\n  cancel-in-progress: true\n\njobs:\n  deploy-dokku:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n        with:\n          fetch-depth: 0\n      \n      - name: Install SSH key\n        run: |\n          echo \"${{ secrets.DOKKU_SSH_PRIVATE_KEY }}\" > private_key.pem\n          chmod 600 private_key.pem\n\n      - name: Add remote and push\n        run: |\n          git remote add dokku dokku@rechat.co:llm-eval\n          GIT_SSH_COMMAND=\"ssh -i private_key.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\" git push dokku main -f\n```\n\n# Miscellaneous Tips\n\nThese are things I often forget, so I'm writing them down here.  For these examples, assume my app is named `llm-eval` and my host is `rechat.co`.\n\n## Run commands remotely\n\nYou don't have to ssh into the Dokku host just to execute commands. You can execute them remotely via the `dokku` user like this:\n\n```bash\n# https://dokku.com/docs/deployment/application-management/\nssh dokku@rechat.co apps:list\n```\n\n## Docker cache\n\nThis is how you can [invalidate the docker cache](https://dokku.com/docs/advanced-usage/repository-management/) for a fresh build:\n\n```bash\nssh dokku@rechat.co repo:purge-cache llm-eval\n```\n\n## Rebuild without pushing\n\nSometimes you want to rebuild without pushing.  There are [many ways to do this](https://dokku.com/docs/processes/process-management/), but one way is like this:\n\n```bash\nssh dokku@rehcat.co ps:rebuild llm-eval\n```\n\n\n# Why Did I Write This?\n\nI had to dig up these details whenever I wanted to deploy a new app, so I had to write it up anyway.  I hope you find it useful, too!\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":["../../../quarto_filter.py"],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","reference-location":"document","css":["../../../styles.css"],"toc":true,"syntax-definitions":["../../../fomo.xml"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","exeucte":{"eval":false},"theme":["solar","../../../custom.scss"],"sidebar":false,"title":"Dokku: my favorite personal serverless platform","description":"Like Heroku, but you own it.","categories":["infra","severless"],"author":"Hamel Husain","date":"2024-01-09","image":"images/serverless.png","order":1},"extensions":{"book":{"multiFile":true}},"format":{"identifier":{},"render":{},"execute":{},"pandoc":{},"language":{},"metadata":{"title":"Dokku: my favorite personal serverless platform","description":"Like Heroku, but you own it.","categories":["infra","severless"],"author":"Hamel Husain","date":"2024-01-09","image":"images/serverless.png","order":1}},"active":true}},"projectFormats":["html"]}