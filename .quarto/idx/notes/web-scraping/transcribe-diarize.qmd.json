{"title":"Transcribe & Diarize Videos","markdown":{"yaml":{"title":"Transcribe & Diarize Videos","description":"Generate transcriptions of videos with speaker labels."},"headingText":"Motivation","containsRefs":false,"markdown":"\n\n\nI wanted to generate transcriptions of videos with speaker labels. Segmenting or labeling the speakers in audio like this is referred to as `Diarization` or `Diarisation` [(wikipedia)](https://en.wikipedia.org/wiki/Speaker_diarisation).  Unfortunately, [OpenAi's Whisper doesn't do diarization](https://github.com/openai/whisper/discussions/264).\n\n# Tools\n\nYou need to install these tools per the instructions on their respective repos:\n\n1. [yt-dlp](https://github.com/yt-dlp/yt-dlp): like youtube-dl minus some bugs. Use this to download the video.\n\n2. [WhisperX](https://github.com/m-bain/whisperX): performs the Diarization\n\nAdditionally, I used a machine with an Nvidia 3090 GPU running Ubuntu 22.04.\n\n# Steps\n\nI'm going to transcribe [this video](https://youtu.be/g_6nQBsE4pU) as an example.\n\n## 1. Download the audio file with [yt-dlp](https://github.com/yt-dlp/yt-dlp).  \n\nThe `-o \"audio.%(ext)s\"` argument is used to name the output as `audo.mp3`.  The `%(ext)s` is a placeholder for the file extension.  The `--extract-audio` and `--audio-format mp3` arguments are used to extract the audio from the video and convert it to mp3 format.\n\n```bash\nyt-dlp --extract-audio --audio-format mp3 \\\n    -o \"audio.%(ext)s\" https://youtu.be/g_6nQBsE4pU\n```\n\nThe above command will generate `audio.mp3` in the current directory.\n\n## 2. Generate the transcript with diarization.  \n\nThis is done with [WhisperX](https://github.com/m-bain/whisperX).  Make sure you carefully follow the instructions in the WhisperX repo corresponding to [Speaker Diarization](https://github.com/m-bain/whisperX#speaker-diarization): you have to click on three Hugging Face repos and accept their terms & conditions.\n\nThe [video](https://youtu.be/g_6nQBsE4pU) I'm working with has 2 speakers, so that's why I'm setting `--min_speakers` and `--max_speakers` equal to 2.  The `--hf_token` argument is the Hugging Face token you get from following the instructions in the WhisperX repo.\n\n```bash\nwhisperx audio.mp3 --model large-v2 --diarize \\\n    --min_speakers 2 --max_speakers 2 --hf_token <your_hf_token>\n```\n\nThis will produce files with the following extensions `audio.{srt, vtt, txt, tsv, json}` in the current directory.  You can limit the formats with ` --output_format` and write these files to a different directory with `--output_dir`.  The `.json` file contains the most detailed information about the diarization, with world-level predictions, whereas the `.vtt` and `.srt` files will contain a more human-readable transcript with speaker labels.  I suggest looking at these files to see which one suits your needs.\n\nIf looking at the `.json` file, I recommend using `jq` with a command like this to see the first row of the `segments` array in that file:\n\n```bash\njq '.segments[0]' audio.json\n```\n\n# Preview\n\nHere's a preview of the `.vtt` file:\n\n```\n> head -n40  audio.vtt\n\nWEBVTT\n\n00:00.248 --> 00:13.531\n[SPEAKER_01]: Hi, this is Jeremy Howard, and you're listening to Coffee Time Data Science, a podcast for data science enthusiasts, where I interview practitioners, researchers, and Kagglers about their journey, experience, and talk all things data science.\n\n00:13.531 --> 00:17.151\n[SPEAKER_01]: And before we begin, I apologize for the change to our schedule.\n\n00:17.151 --> 00:22.593\n[SPEAKER_01]: Of course, usually you would be seeing Chai Time Data Science on this channel with Sanyam Bhutani.\n\n00:22.593 --> 00:24.373\n[SPEAKER_01]: Unfortunately, he's not available today.\n\n00:24.373 --> 00:29.514\n[SPEAKER_01]: He had a prior appointment on another podcast, and he was not able to join Chai Time Data Science.\n\n00:29.974 --> 00:34.338\n[SPEAKER_01]: We hope you enjoy this special episode of Coffee Time Data Science.\n\n00:34.338 --> 00:45.148\n[SPEAKER_01]: And without further ado, I would like to invite our very special VIP guest, newly anointed Kaggle Grand Master, Sanyam Bhutani.\n\n00:45.148 --> 00:47.190\n[SPEAKER_01]: Sanyam, welcome to Coffee Time Data Science.\n\n00:48.372 --> 00:49.073\n[SPEAKER_00]: Thank you, Jeremy.\n\n00:49.073 --> 00:53.537\n[SPEAKER_00]: Usually, I'm very anti coffee, but I'll have to allow that.\n\n00:53.537 --> 00:55.678\n[SPEAKER_00]: I still can't believe you weren't kidding.\n\n00:55.678 --> 00:59.421\n[SPEAKER_00]: And I mentioned in our message also, like I, I think I don't deserve this.\n\n00:59.421 --> 01:00.042\n[SPEAKER_00]: But thank you.\n```\n\n\n# Other projects\n\n- [HuggingFace: Whisper Speaker Diarization](https://huggingface.co/spaces/vumichien/Whisper_speaker_diarization). I tried this, and while it worked decently, the results were not as good as WhisperX out of the box.\n- [Pyannote-audio](https://github.com/pyannote/pyannote-audio). H/T Tansihq Abraham for pointing this out to me.  WhisperX also uses it.\n","srcMarkdownNoYaml":"\n\n# Motivation\n\nI wanted to generate transcriptions of videos with speaker labels. Segmenting or labeling the speakers in audio like this is referred to as `Diarization` or `Diarisation` [(wikipedia)](https://en.wikipedia.org/wiki/Speaker_diarisation).  Unfortunately, [OpenAi's Whisper doesn't do diarization](https://github.com/openai/whisper/discussions/264).\n\n# Tools\n\nYou need to install these tools per the instructions on their respective repos:\n\n1. [yt-dlp](https://github.com/yt-dlp/yt-dlp): like youtube-dl minus some bugs. Use this to download the video.\n\n2. [WhisperX](https://github.com/m-bain/whisperX): performs the Diarization\n\nAdditionally, I used a machine with an Nvidia 3090 GPU running Ubuntu 22.04.\n\n# Steps\n\nI'm going to transcribe [this video](https://youtu.be/g_6nQBsE4pU) as an example.\n\n## 1. Download the audio file with [yt-dlp](https://github.com/yt-dlp/yt-dlp).  \n\nThe `-o \"audio.%(ext)s\"` argument is used to name the output as `audo.mp3`.  The `%(ext)s` is a placeholder for the file extension.  The `--extract-audio` and `--audio-format mp3` arguments are used to extract the audio from the video and convert it to mp3 format.\n\n```bash\nyt-dlp --extract-audio --audio-format mp3 \\\n    -o \"audio.%(ext)s\" https://youtu.be/g_6nQBsE4pU\n```\n\nThe above command will generate `audio.mp3` in the current directory.\n\n## 2. Generate the transcript with diarization.  \n\nThis is done with [WhisperX](https://github.com/m-bain/whisperX).  Make sure you carefully follow the instructions in the WhisperX repo corresponding to [Speaker Diarization](https://github.com/m-bain/whisperX#speaker-diarization): you have to click on three Hugging Face repos and accept their terms & conditions.\n\nThe [video](https://youtu.be/g_6nQBsE4pU) I'm working with has 2 speakers, so that's why I'm setting `--min_speakers` and `--max_speakers` equal to 2.  The `--hf_token` argument is the Hugging Face token you get from following the instructions in the WhisperX repo.\n\n```bash\nwhisperx audio.mp3 --model large-v2 --diarize \\\n    --min_speakers 2 --max_speakers 2 --hf_token <your_hf_token>\n```\n\nThis will produce files with the following extensions `audio.{srt, vtt, txt, tsv, json}` in the current directory.  You can limit the formats with ` --output_format` and write these files to a different directory with `--output_dir`.  The `.json` file contains the most detailed information about the diarization, with world-level predictions, whereas the `.vtt` and `.srt` files will contain a more human-readable transcript with speaker labels.  I suggest looking at these files to see which one suits your needs.\n\nIf looking at the `.json` file, I recommend using `jq` with a command like this to see the first row of the `segments` array in that file:\n\n```bash\njq '.segments[0]' audio.json\n```\n\n# Preview\n\nHere's a preview of the `.vtt` file:\n\n```\n> head -n40  audio.vtt\n\nWEBVTT\n\n00:00.248 --> 00:13.531\n[SPEAKER_01]: Hi, this is Jeremy Howard, and you're listening to Coffee Time Data Science, a podcast for data science enthusiasts, where I interview practitioners, researchers, and Kagglers about their journey, experience, and talk all things data science.\n\n00:13.531 --> 00:17.151\n[SPEAKER_01]: And before we begin, I apologize for the change to our schedule.\n\n00:17.151 --> 00:22.593\n[SPEAKER_01]: Of course, usually you would be seeing Chai Time Data Science on this channel with Sanyam Bhutani.\n\n00:22.593 --> 00:24.373\n[SPEAKER_01]: Unfortunately, he's not available today.\n\n00:24.373 --> 00:29.514\n[SPEAKER_01]: He had a prior appointment on another podcast, and he was not able to join Chai Time Data Science.\n\n00:29.974 --> 00:34.338\n[SPEAKER_01]: We hope you enjoy this special episode of Coffee Time Data Science.\n\n00:34.338 --> 00:45.148\n[SPEAKER_01]: And without further ado, I would like to invite our very special VIP guest, newly anointed Kaggle Grand Master, Sanyam Bhutani.\n\n00:45.148 --> 00:47.190\n[SPEAKER_01]: Sanyam, welcome to Coffee Time Data Science.\n\n00:48.372 --> 00:49.073\n[SPEAKER_00]: Thank you, Jeremy.\n\n00:49.073 --> 00:53.537\n[SPEAKER_00]: Usually, I'm very anti coffee, but I'll have to allow that.\n\n00:53.537 --> 00:55.678\n[SPEAKER_00]: I still can't believe you weren't kidding.\n\n00:55.678 --> 00:59.421\n[SPEAKER_00]: And I mentioned in our message also, like I, I think I don't deserve this.\n\n00:59.421 --> 01:00.042\n[SPEAKER_00]: But thank you.\n```\n\n\n# Other projects\n\n- [HuggingFace: Whisper Speaker Diarization](https://huggingface.co/spaces/vumichien/Whisper_speaker_diarization). I tried this, and while it worked decently, the results were not as good as WhisperX out of the box.\n- [Pyannote-audio](https://github.com/pyannote/pyannote-audio). H/T Tansihq Abraham for pointing this out to me.  WhisperX also uses it.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":["../../quarto_filter.py"],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","reference-location":"document","css":["../../styles.css"],"toc":true,"syntax-definitions":["../../fomo.xml"],"output-file":"transcribe-diarize.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","exeucte":{"eval":false},"theme":["solar","../../custom.scss"],"image":"https://user-images.githubusercontent.com/1483922/208359430-f55d7503-3a98-4875-a35c-16314c9439d0.png","title":"Transcribe & Diarize Videos","description":"Generate transcriptions of videos with speaker labels."},"extensions":{"book":{"multiFile":true}},"format":{"identifier":{},"render":{},"execute":{},"pandoc":{},"language":{},"metadata":{"title":"Transcribe & Diarize Videos","description":"Generate transcriptions of videos with speaker labels."}},"active":true}},"projectFormats":["html"]}